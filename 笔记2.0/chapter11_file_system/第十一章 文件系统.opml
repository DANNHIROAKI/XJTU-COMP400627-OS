<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title></title>
    <dateModified></dateModified>
    <ownerName></ownerName>
  </head>
  <body>
<outline text="第十一章 文件系统">
  <outline text="11.1 基本概念" _note="内存具有易失性，需要文件系统管理信息&#10;&#10;信息是计算机系统中的重要资源；&#10;&#10;操作系统中的一个重要组成部分——文件系统，就负责**信息的组织、存储和访问**；&#10;&#10;文件系统的功能就是**提供高效、快速和方便的信息存储和访问功能。**&#10;&#10;&gt; 文件系统是操作系统中以文件方式管理计算机软件资源的软件和被管理的文件和数据结构（如目录和索引表等）的集合。&#10;&gt;&#10;&gt; 从系统角度来看，文件系统是对文件存储器的存储空间进行组织、分配和回收，负责文件的存储、检索、共享和保护。&#10;&gt;&#10;&gt; 从用户角度来看，文件系统主要是实现“**按名取存**”，文件系统的用户只要知道所需文件的文件名，就可存取文件中的信息，而无需知道这些文件究竟存放在什么地方。">
    <outline text="文件系统的层次结构" _note="    graph TD&#10;    A[用户接口] --&gt;B[文件目录结构]&lt;--&gt;C[存取控制验证]--&gt;D[逻辑文件系统与文件信息缓冲区]--&gt;E[物理文件系统]--&gt;F[辅存分配模块]&#10;    E--&gt;G[设备管理模块]--&gt;H[设备]">
    </outline>
    <outline text="文件系统的作用" _note="&gt; 提供对文件的各种操作，实现按名存取&#10;&gt;&#10;&gt; 提供合适的访问方式&#10;&gt;&#10;&gt; 提供目录管理和操作&#10;&gt;&#10;&gt; 实现文件的共享、保护&#10;&gt;&#10;&gt; 统一管理文件的存储空间，实现存储空间的分配和回收&#10;&gt;&#10;&gt; 实现逻辑文件与物理文件间的转换">
    </outline>
    <outline text="文件概念" _note="文件是记录在外存上的具有名字的相关信息的集合">
      <outline text="分类" _note="&gt; 系统文件、库文件、用户文件&#10;&gt;&#10;&gt; 临时文件、永久文件、档案文件&#10;&gt;&#10;&gt; 只读文件、读写文件、只执行文件&#10;&gt;&#10;&gt; 流式文件、记录式文件&#10;&gt;&#10;&gt; ......">
      </outline>
      <outline text="文件属性" _note="文件名、类型、大小、位置、保护（读取、改写权限）、时间......&#10;&#10;属性信息放在**目录**中存储在硬盘里">
      </outline>
      <outline text="文件系统结构" _note="文件系统按层组织&#10;&#10;文件控制块FCB：由一个文件的相关信息组成的存储结构">
      </outline>
    </outline>
  </outline>
  <outline text="11.2 文件结构与存储设备" _note="**用户和文件系统往往从不同的角度对待同一个文件 **&#10;&#10;&gt; 用户：从使用的角度，按信息的使用和处理方式组织文件。&#10;&gt;&#10;&gt; 文件系统：从文件的存储和检索的角度，根据用户对文件的存取方式和存储介质的特性组织文件，决定用户文件存放在存储介质上的方式。&#10;&#10;**文件有两种形式的结构：文件的逻辑结构和文件的物理结构。**&#10;&#10;&gt; 逻辑结构:**用户对文件的组织结构**&#10;&gt;&#10;&gt; 物理结构:**文件在外存储器上的存储结构**&#10;&gt;&#10;&gt; 物理结构直接影响存储空间的使用和检索文件信息的速度&#10;&gt;&#10;&gt; 逻辑文件保存到存储介质上的工作由文件系统来做，这样可减轻用户的负担。根据用户对文件的存取方式和存储介质的特性，文件在存储介质上可以有多种组织形式。">
    <outline text="文件的逻辑结构" _note="文件从逻辑结构上分成二种形式，**一种是无结构的流式文件，另一种是有结构的记录式文件。**&#10;&#10;&gt; 流式文件是指对文件内信息不再划分单位，它是依次的一串字符流构成的文件。如exe文件&#10;&gt;&#10;&gt; 记录式文件是用户把文件内的信息按逻辑上独立的含义划分信息单位，每个单位称为一个逻辑记录（简称记录）。所有记录通常都是描述一个实体集的，有着相同或不同数目的数据项，记录的长度可分为定长和不定长记录两类。&#10;&gt;&#10;&gt; &gt; 记录文件有**顺序、索引、索引顺序**文件几种。&#10;&#10;**文件的结构由操作系统和程序决定**">
      <outline text="顺序结构文件" _note="顺序文件的所有记录按键值的约定次序组织&#10;&#10;记录可以是定长的，也可以是变长的，定长的便于查找&#10;&#10;顺序文件常用于批量记录读取，对于访问某个记录的请求则处理性能不佳">
      </outline>
      <outline text="索引文件" _note="索引文件对主文件中的记录按需要的数据项（一个或几个）建索引表。&#10;&#10;为每个记录设置一个表项&#10;&#10;索引文件本身是顺序文件组织，是一个定长文件。&#10;&#10;**优点**：便于随机访问、易于文件增删&#10;&#10;**缺点**：增加了空间开销，查找策略影响很大">
      </outline>
      <outline text="索引顺序文件" _note="索引顺序文件是基于键的约定次序组织的。将顺序文件中的所有记录分为若干个组；再为顺序文件建立一张索引表，表中记录每个组的第一个记录，该索引项包含记录的键值和指向该记录的指针。它是顺序文件和索引文件的结合。&#10;&#10;检索时，先根据关键字去检索索引表，找到该记录所在组的第一个记录的位置，然后再利用顺序查找法去查找主文件，找到所需记录">
      </outline>
      <outline text="文件的访问方式" _note="常用的包括顺序存取、直接/随机存取&#10;&#10;&gt; 顺序访问：按照文件信息的逻辑顺序依次存取&#10;&gt;&#10;&gt; 随机存取：根据记录的编号来直接存取文件中的任意一个记录，而无需存取其前面的记录">
      </outline>
    </outline>
    <outline text="文件的物理结构" _note="用户按逻辑结构使用文件，文件系统按物理结构管理文件。因此，当用户请求读写文件时，文件系统必须实现文件的逻辑结构与物理结构之间的转换。&#10;&#10;**文件在外存的存放组织形式**称为文件的物理结构&#10;&#10;文件的物理结构**取决于外存的分配方式**&#10;&#10;&gt; -   连续分配——顺序结构&#10;&gt;&#10;&gt; -   链接分配——链接结构&#10;&gt;&#10;&gt; -   索引分配——索引结构&#10;&#10;文件的存储设备主要有磁带，磁盘，光盘等，存储设备的特性可以决定文件的存取方法。&#10;&#10;&gt; 文件的存储设备常常划分为若干大小相等的**物理块**&#10;&gt;&#10;&gt; 以块为单位进行信息的存储、传输&#10;&gt;&#10;&gt; 磁带：顺序存取结构&#10;&gt;&#10;&gt; 磁盘：直接存取设备：三种文件物理结构都可以采用">
      <outline text="顺序分配" _note="每一个文件占用一个连续的磁盘块的集合&#10;&#10;简单：只需要起始块号和长度&#10;&#10;可以随机存取、会**产生外碎片**&#10;&#10;浪费空间：动态存储分配问题&#10;&#10;从逻辑地址映射到物理地址：`逻辑地址/块大小=块号	逻辑地址%块大小=偏移`&#10;&#10;**优点**：&#10;&#10;&gt; 简单,支持随机存取和顺序存取&#10;&gt;&#10;&gt; 顺序存取速度快&#10;&gt;&#10;&gt; **所需的磁盘寻道次数和寻道时间最少**&#10;&#10;**缺点**：&#10;&#10;&gt; 要求连续的存储空间&#10;&gt;&#10;&gt; 会产生外碎片&#10;&gt;&#10;&gt; 要求用户给出文件最大长度:不利于文件的动态扩充&#10;&gt;&#10;&gt; 不利于文件的插入和删除">
      </outline>
      <outline text="链接分配" _note="**隐式链接**：一个文件的信息存放在若干不连续的物理块中，各块之间通过指针连接，前一个物理块指向下一个物理块&#10;&#10;**不支持随机访问**、指针占据存储空间(所以除的时候要减去指针的空间)&#10;&#10;不会产生外碎片&#10;&#10;**优点**&#10;&#10;&gt; 提高了磁盘空间利用率,不存在外部碎片问题&#10;&gt;&#10;&gt; 有利于文件插入和删除&#10;&gt;&#10;&gt; 有利于文件动态扩充&#10;&#10;**缺点**&#10;&#10;&gt; 存取速度慢，不适于随机存取&#10;&gt;&#10;&gt; 可靠性问题，如指针出错&#10;&gt;&#10;&gt; 更多的寻道次数和寻道时间&#10;&gt;&#10;&gt; 指针占用空间&#10;&#10;可将多个块组成簇，以簇为单位分配，指针占用百分比减少，但增加内碎片&#10;&#10;变形得到**显式链接**：文件分配表FAT（整个磁盘只有一张）">
      </outline>
      <outline text="索引结构" _note="&gt; 链接结构没有外碎片，但不能直接存取&#10;&gt;&#10;&gt; FAT方式需要占用较大的内存空间&#10;&#10;**事实上，打开某个文件时，只需知道该文件所在的盘块号**&#10;&#10;一个文件的信息存放在若干不连续物理块中，系统为每个文件建立一个索引表，并将这些块的块号存放在索引表中&#10;&#10;一个索引表就是磁盘块地址数组,其中第i个条目指向文件的第i块&#10;&#10;**既没有外碎片，也可以随机访问**&#10;&#10;**优点**:&#10;&#10;&gt; 保持链接结构的优点，又克服了其缺点:&#10;&gt;&#10;&gt; &gt; 既能顺序存取又能随机存取&#10;&gt; &gt;&#10;&gt; &gt; 满足了文件动态增长\\插入删除要求&#10;&gt; &gt;&#10;&gt; &gt; 能充分利用外存空间&#10;&#10;**缺点**:&#10;&#10;&gt; **较多的寻道次数和寻道时间**&#10;&gt;&#10;&gt; 索引表本身带来了系统开销,如：内外存空间，存取时间&#10;&#10;**索引表的组织**&#10;&#10;&gt; **链接模式**&#10;&gt;&#10;&gt; &gt; :大的文件，索引表占了若干个盘块，一个盘块一个索引表,多个索引表链接起来&#10;&gt;&#10;&gt; **多级索引**&#10;&gt;&#10;&gt; &gt; ⭕️将一个大文件的所有索引表（二级索引)的地址放在另一个索引表（主索引，一级索引)中  &#10;&gt; &gt; ⭕️在两级索引分配方式，若每个盘块大小为1KB，每个盘块号占4字节，则一个索引块中可存放256个盘块号。则两级索引最多可包含的盘块号总数为64K个（256\*256）。因此，所允许的文件的最大长度为64MB（64K\*1KB）。&#10;&gt;&#10;&gt; **混合索引**">
      </outline>
    </outline>
  </outline>
  <outline text="11.3 目录结构" _note="**目录**：一个包含着所有文件信息的节点的集合&#10;&#10;目录结构和文件都在磁盘上&#10;&#10;备份放在磁带&#10;&#10;**目录中的信息**：名称、类型、地址、当前长度、最大长度、最后访问时间、数据最后更新时间、所有者ID、保护信息&#10;&#10;📖 文件**控制块FCB**&#10;&#10;&gt; 用于描述和控制文件的数据结构，它至少要包括文件名和存放文件的盘物理地址&#10;&gt;&#10;&gt; 文件控制块的有序集合称为文件目录，即一个文件控制块FCB就是一个文件目录项。&#10;&#10;A FCB contains&#10;&#10;&gt; 文件基本信息：文件名，用户名，文件地址，文件长度，文件逻辑结构，物理结构&#10;&gt;&#10;&gt; 存取控制信息：文件存取权限&#10;&gt;&#10;&gt; 管理信息：共享计数，文件的建立日期，保存期限，最后修改日期，最后访问日期">
    <outline text="文件目录与目录文件" _note="⭐️ **文件目录：文件控制块的有序集合**&#10;&#10;&gt; 文件目录是用于检索文件的，它是文件系统实现按名存取的重要手段&#10;&gt; ，它的组织和管理应便于检索和防止冲突&#10;&gt;&#10;&gt; 目录项：构成文件目录的项目（目录项就是FCB）&#10;&#10;⭐️&#10;**目录文件：为了实现对文件目录的管理，将文件目录以文件的形式保存在外存，这个文件就叫目录文件**&#10;&#10;&gt; 目录结构的组织关系到:&#10;&gt;&#10;&gt; 文件的存取速度&#10;&gt;&#10;&gt; 文件共享性和安全性">
    </outline>
    <outline text="目录操作" _note="Operations Performed on Directory&#10;&#10;建立、寻找、删除一个文件，列出目录的列表，重命名文件，遍历文件系统">
    </outline>
    <outline text="组织目录的逻辑结构" _note="Organize the Directory （Logically） to Obtain&#10;&#10;两个用户可以有相同名字的不同文件、相同的文件可以有不同的名字">
      <outline text="单级目录Single-Level Directory" _note="整个文件系统中，单级目录结构只建立一张目录表&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20211222195413258.png)&#10;&#10;**缺点**：不允许文件重名、文件查找速度慢">
      </outline>
      <outline text="二级目录Two-Level Directory" _note="解决一级目录文件命名冲突，并提高对目录文件检索速度而改进&#10;&#10;每个用户有单独的目录&#10;&#10;目录分为两级：&#10;&#10;&gt; 一级称为主文件目录（MFD），给出用户名，用户子目录所在的物理位置；&#10;&gt;&#10;&gt; 二级称为用户文件目录（UFD，又称用户子目录），给出该用户所有文件的FCB&#10;&#10;**优点**：&#10;&#10;&gt; 解决了文件的重名问题:用户名|文件名、查找时间降低&#10;&#10;**缺点**&#10;&#10;&gt; 缺乏灵活性，不利于共享">
      </outline>
      <outline text="树型目录Tree-Structured Directories" _note="![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20211222195800206.png)&#10;&#10;第一级目录为根目录、第二级目录为子目录、叶子节点为文件&#10;&#10;**优点**：&#10;&#10;&gt; 层次结构清晰，便于管理和保护；&#10;&gt;&#10;&gt; 有利于文件分类；&#10;&gt;&#10;&gt; 解决重名问题；&#10;&gt;&#10;&gt; 提高文件检索速度；&#10;&#10;**缺点**：&#10;&#10;&gt; 查找一个文件按路径名逐层检查，由于目录文件都放在外存，多次访盘影响速度">
      </outline>
      <outline text="无环图结构目录Acyclic-Graph Directories" _note="有共享的子目录和文件&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20211222200039565.png)&#10;&#10;当用户要求删除一个共享节点时，系统不能简单地就删除，否则会导致其他用户访问时找不到，可以为每个共享节点设置一个共享计数器，每增加一个共享链时，计数器加一；每当有一个用户提出删除要求时，计数器减一，仅当计数器的值为0时，才真正删除结点。">
      </outline>
      <outline text="文件共享">
        <outline text="基于索引结点的共享方式——硬链接" _note="两个不同的目录项只需要指向相同的索引结点即可实现共享">
        </outline>
        <outline text="利用符号链实现文件共享——软链接" _note="系统为要共享文件的用户创建一个**link类型的新文件**，将这新文件登录在该用户共享目录项中，这个link型文件包含被链接文件的**路径名**。该类文件在用ls命令长列表显示时，文件类型为l。&#10;&#10;拥有者才有指针、其他用户只有路径名&#10;&#10;可以通过计算机网络链接到世界上任何地方的机器中的文件、其它用户读取符号链接的共享文件比读取硬连接的共享文件需要增多读盘操作">
        </outline>
      </outline>
    </outline>
    <outline text="文件目录改进" _note="为加快目录检索可采用目录项分解法：把FCB分成两部分&#10;&#10;&gt; •**符号文件目录**：&#10;&gt;&#10;&gt; 由文件名和文件内部标识组成的树状结构，&#10;&gt;&#10;&gt; 按文件名排序；&#10;&gt;&#10;&gt; • **基本文件目录**（索引节点目录）：&#10;&gt;&#10;&gt; 由其余文件说明信息组成的线性结构，&#10;&gt;&#10;&gt; 按文件内部标识排序。">
    </outline>
  </outline>
  <outline text="11.4 文件操作" _note="**建立文件**:&#10;&#10;&gt; 建立文件的FCB&#10;&gt;&#10;&gt; 分配必要的外存空间&#10;&gt;&#10;&gt; 在文件目录中为之建立一个目录项,目录项中记录新文件的文件名及其在外存的地址等属性,返回一个文件描述符。&#10;&#10;**删除文件**:&#10;&#10;&gt; 从目录中找到要删除文件的目录项&#10;&gt;&#10;&gt; 使之成为空闲目录项&#10;&gt;&#10;&gt; 回收该文件所占用的存储空间&#10;&#10;**读文件** : 把文件中的数据从外存读入内存的用户区&#10;&#10;&gt; 查找目录，找到指定文件的目录项，从中得到被读文件在外存的地址&#10;&gt;&#10;&gt; 从外存将数据读入内存&#10;&#10;**写文件** :&#10;&#10;&gt; 查找目录，找到指定文件的目录项&#10;&gt;&#10;&gt; 利用目录中的文件指针将信息写入文件&#10;&#10;**打开文件**:&#10;为了避免每次访问文件时都要从外存中查找文件目录，系统提供了打开文件命令。&#10;&#10;&gt; 将待访问文件的目录信息读入内存活动文件表中，建立起用户和文件的联系。&#10;&gt;&#10;&gt; 在有些系统中，也可以通过读命令隐含地向系统提出打开文件的要求。若在读写命令中不包含打开文件功能，则在使用文件之前，必须先打开文件。&#10;&#10;**关闭文件**:&#10;&#10;&gt; 撤消主存中有关该文件的目录信息，切断用户与该文件的联系；&#10;&gt;&#10;&gt; 若在文件打开期间，该文件作过某种修改，则应将其写回辅存。">
  </outline>
  <outline text="11.5 文件存储空间管理Free-Space Management" _note="**位图法**&#10;&#10;&gt; 用一串二进制位反映磁盘空间中分配使用情况, 每个物理块对应一位,&#10;&gt; **分配物理块为0，否则为1**。&#10;&gt; 申请物理块时，可以在位示图中查找为1的位，返回对应物理块号；&#10;&gt; 归还时；将对应位置1。&#10;&gt;&#10;&gt; 位图的大小由磁盘空间的大小缺点，保存在主存中&#10;&#10;**空闲块表**&#10;&#10;&gt; 将所有空闲块记录在一个表中，即空闲块表，有两项：该空闲区的第一个盘块号、该区的空闲盘块总数&#10;&#10;**空闲块链表**&#10;&#10;&gt; 把所有空闲块链成一个链. 扩展：成组链接法&#10;&#10;**成组链接法**">
  </outline>
  <outline text="11.6 文件系统实现" _note="文件系统的实现需要数据结构的支持：磁盘中的结构和内存中的结构&#10;&#10;磁盘中的结构：引导控制块、分区控制块、目录结构FCB&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20211118142627380.png)">
  </outline>
</outline>
  </body>
</opml>
